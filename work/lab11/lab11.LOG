Script started on 2020-04-23 14:58:47-04:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="169" LINES="39"]
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ ls
lab11.LOG
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ cp ../../submit/
lab0/     lab1/     lab10/    lab2/     lab3/     lab4/     lab5/     lab6/     lab7/     lab8/     lab9/     prj1-sol/ prj2-sol/ 
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ cp ../../submit/lab9/
exercises/ lab9.LOG   
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ cp ../../submit/lab9/exercises/
2-sorts/        3-stats/        4-time/         ascending.dat   descending.dat  .gitignore      Makefile        plot.gp         random.dat      
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ cp ../../submit/lab9/exercises/[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
lab0/     lab1/     lab10/    lab2/     lab3/     lab4/     lab5/     lab6/     lab7/     lab8/     lab9/     prj1-sol/ prj2-sol/ 
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ cp ../../submit/
lab0/     lab1/     lab10/    lab2/     lab3/     lab4/     lab5/     lab6/     lab7/     lab8/     lab9/     prj1-sol/ prj2-sol/ 
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ cp ../../submit/5[Klab5/
exercises/ lab5.LOG   
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ cp ../../submit/lab5/
exercises/ lab5.LOG   
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ cp ../../submit/lab5/exercises/
1-animal/ 2-expr/   Makefile  
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ cp ../../submit/lab5/exercises/1-animal/
animal.hh   .gitignore  main.cc     
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ cp ../../submit/lab5/exercises/1-animal/../e[K2-expr/
expr.cc      expr.hh      .gitignore   main.cc      parse.cc     parse.hh     tostring.cc  tostring.hh  
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ cp ../../submit/lab5/exercises/1-animal/../2-expr/expr.*[Kcc[K[K{}c}c},}h}h}[C .
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ ls
expr.cc  expr.hh  lab11.LOG
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ mv expr.cc sample.cc
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ mv expr.hh sample.hh
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ ls
lab11.LOG  sample.cc  sample.hh
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ nano sample.[K[K[K[K[K[K[K[K[K[K[K[Kmkdor[K[Kir solution
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ mv sample.* solution/
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ ls
lab11.LOG  [0m[01;34msolution[0m
]0;aservet1@remote05: ~/i240a/work/lab11[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11[01;31m (master)[00m$ cd solution/
]0;aservet1@remote05: ~/i240a/work/lab11/solution[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11/solution[01;31m (master)[00m$ ls
sample.cc  sample.hh
]0;aservet1@remote05: ~/i240a/work/lab11/solution[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11/solution[01;31m (master)[00m$ nano *
[?1049h[22;0;0t[1;39r(B[m[4l[?7h[39;49m[?1h=[?1h=[?1h=[?25l[39;49m(B[m[H[2J[37;77H(B[0;7m[ Reading File ](B[m[37;83H(B[0;7m 85 lines ](B[m[37;83H(B[0;7ming File ](B[m[K[37;76H(B[0;7m[ Read 157 lines ](B[m[37;73H(B[0;7m[ sample.cc -- 85 lines ](B[m[H(B[0;7m  [1/2]                                                                       sample.cc                                                                                  [1;168H(B[m[38d(B[0;7m^G(B[m Get Help     (B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut Text     (B[0;7m^J(B[m Justify[81G(B[0;7m^C(B[m Cur Pos[97G(B[0;7mM-U(B[m Undo[38;113H(B[0;7mM-A(B[m Mark Text   (B[0;7mM-](B[m To Bracket  (B[0;7mM-Q(B[m Previous[39d(B[0;7m^X(B[m Close[39;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Uncut Text   (B[0;7m^T(B[m To Spell     (B[0;7m^_(B[m Go To Line   (B[0;7mM-E(B[m Redo[39;113H(B[0;7mM-6(B[m Copy Text   (B[0;7m^Q(B[m Where Was    (B[0;7mM-W(B[m Next[37d[3d(B[0;1m[36m#include[39m(B[m (B[0;1m[33m"expr.hh"[5d[36m#include[39m(B[m (B[0;1m[33m<string>[6d[36m#include[39m(B[m (B[0;1m[33m<sstream>[8d[39m(B[mstd::string[9dIntExpr::toString() [32mconst[10d[39m(B[m{[11d std::stringstream s;[12;3Hs << value;[13;3H[35mreturn[39m(B[m s.str();[14d}[16d[32mstatic[39m(B[m std::string[17dbinaryExprToString(std::string op, ExprPtr left, ExprPtr right)[18d{[19d std::stringstream s;[20;3Hs << (B[0;1m[33m"("[39m(B[m << *left << (B[0;1m[33m") "[39m(B[m << op << (B[0;1m[33m" ("[39m(B[m << *right << (B[0;1m[33m")"[39m(B[m;[21;3H[35mreturn[39m(B[m s.str();[22d}[24dstd::string[25dIntExpr::dcCode() [32mconst[26d[39m(B[m{[27;9Hstd::stringstream s;[28;9Hs << value;[29;9H[35mreturn[39m(B[m s.str();[30d}[32dstd::string[33dAddExpr::dcCode() [32mconst[34d[39m(B[m{[35;9Hstd::stringstream s;[36;9Hs << (*left).dcCode() << (B[0;1m[33m" "[39m(B[m << (*right).dcCode() << (B[0;1m[33m" +"[39m(B[m;[3d[?12l[?25h[?25l[1;4H(B[0;7m2[1;86Hhh[168G(B[m[37;72H(B[0;7m[ sample.hh -- 157[37;98H(B[m[3;3H(B[0;1m[36mfndef[39m(B[m (B[0;1m[31mEXPR_HH_[39m(B[m[K[4d(B[0;1m[36m#define[39m(B[m (B[0;1m[31mEXPR_HH_[5d[39m(B[m[K[6;10H(B[0;1m[33m"tostring.hh"[8d[36m#include[39m(B[m (B[0;1m[33m<memory>[9d[36m#include[39m(B[m (B[0;1m[33m<string>[39m(B[m[K[10d[K[11d[K[12d[32mclass[39m(B[m Expr : [32mpublic[39m(B[m ToString {[13d[32mpublic(B[0;1m[35m:[39m(B[m[K[14d  [32mvirtual[39m(B[m [32mint[39m(B[m eval() [32mconst[39m(B[m = 0;[15;3H[32mvirtual[39m(B[m std::string dcCode() [32mconst[39m(B[m = 0;[16d};[K[17d[K[18d(B[0;1m[34m//ExprPtr is an alias for a smart shared ptr to an Expr.[19d//using is like a typedef[20d(B[0m[32musing[39m(B[m ExprPtr = std::shared_ptr(B[0;1m[33m<Expr>[39m(B[m;[K[21d[K[22d(B[0;1m[34m/** An IntExpr only contains an integer value */[23d(B[0m[32mclass[39m(B[m IntExpr : [32mpublic[39m(B[m Expr {[24d[32mprivate(B[0;1m[35m:[39m(B[m[K[25d  [32menum[39m(B[m [32mclass[39m(B[m Private { (B[0;1m[31mTAG[39m(B[m };[26d[32mpublic(B[0;1m[35m:[27;3H(B[0m[32mconst[39m(B[m [32mint[39m(B[m value;[K[28d[K[29d  (B[0;1m[34m/** Factory function */[30d[39m(B[m  [32mstatic[39m(B[m ExprPtr make([32mint[39m(B[m val) {[31;5H[35mreturn[39m(B[m std::make_shared(B[0;1m[33m<IntExpr>[39m(B[m(val, Private::(B[0;1m[31mTAG[39m(B[m);[32d  }[K[33d[K[34d  std::string dcCode() [32mconst[39m(B[m;[35d[42m  [49m(B[m[K[36dstd::string toString() [32mconst[39m(B[m;[K[3d[?12l[?25h[?25l[1;4H(B[0;7m1[1;86Hcc[168G(B[m[37;72H (B[0;7m[ sample.cc -- 85[37;98H(B[m[4;15r[15;1H[39;49m(B[m[4S[1;39r[3;3H(B[0;1m[36mnclude[39m(B[m (B[0;1m[33m"expr.hh"[4d[39m(B[m[K[6d(B[0;1m[36m#include[39m(B[m (B[0;1m[33m<sstream>[8d[39m(B[mstd::string[K[9dIntExpr::toString() [32mconst[10d[39m(B[m{[K[11d std::stringstream s;[K[12;3Hs << value;[13;3H[35mreturn[39m(B[m s.str();[14d}[16d[32mstatic[39m(B[m std::string[17dbinaryExprToString(std::string op, ExprPtr left, ExprPtr right)[18d{[K[19d  std::stringstream s;[K[20d  s << (B[0;1m[33m"("[39m(B[m << *left << (B[0;1m[33m") "[39m(B[m << op << (B[0;1m[33m" ("[39m(B[m << *right << (B[0;1m[33m")"[39m(B[m;[21;3H[35mreturn[39m(B[m s.str();[22d}[K[23d[K[24dstd::string[25dIntExpr::dcCode() [32mconst[39m(B[m[K[26d{[K[27;8H[1K std::stringstream s;[28;9Hs << value;[29;8H[1K [35mreturn[39m(B[m s.str();[K[30d}[K[31d[K[32dstd::string[33dAddExpr::dcCode() [32mconst[34d[39m(B[m{[K[35;8H[1K std::stringstream s;[36;8H[1K s << (*left).dcCode() << (B[0;1m[33m" "[39m(B[m << (*right).dcCode() << (B[0;1m[33m" +"[39m(B[m;[3d[?12l[?25h[?25l[1;4H(B[0;7m2[1;86Hhh[168G(B[m[37;72H(B[0;7m[ sample.hh -- 157[37;98H(B[m[3;3H(B[0;1m[36mfndef[39m(B[m (B[0;1m[31mEXPR_HH_[39m(B[m[K[4d(B[0;1m[36m#define[39m(B[m (B[0;1m[31mEXPR_HH_[5d[39m(B[m[K[6;10H(B[0;1m[33m"tostring.hh"[8d[36m#include[39m(B[m (B[0;1m[33m<memory>[9d[36m#include[39m(B[m (B[0;1m[33m<string>[39m(B[m[K[10d[K[11d[K[12d[32mclass[39m(B[m Expr : [32mpublic[39m(B[m ToString {[13d[32mpublic(B[0;1m[35m:[39m(B[m[K[14d  [32mvirtual[39m(B[m [32mint[39m(B[m eval() [32mconst[39m(B[m = 0;[15;3H[32mvirtual[39m(B[m std::string dcCode() [32mconst[39m(B[m = 0;[16d};[K[17d[K[18d(B[0;1m[34m//ExprPtr is an alias for a smart shared ptr to an Expr.[19d//using is like a typedef[20d(B[0m[32musing[39m(B[m ExprPtr = std::shared_ptr(B[0;1m[33m<Expr>[39m(B[m;[K[21d[K[22d(B[0;1m[34m/** An IntExpr only contains an integer value */[23d(B[0m[32mclass[39m(B[m IntExpr : [32mpublic[39m(B[m Expr {[24d[32mprivate(B[0;1m[35m:[39m(B[m[K[25d  [32menum[39m(B[m [32mclass[39m(B[m Private { (B[0;1m[31mTAG[39m(B[m };[26d[32mpublic(B[0;1m[35m:[27;3H(B[0m[32mconst[39m(B[m [32mint[39m(B[m value;[K[28d[K[29d  (B[0;1m[34m/** Factory function */[30d[39m(B[m  [32mstatic[39m(B[m ExprPtr make([32mint[39m(B[m val) {[31;5H[35mreturn[39m(B[m std::make_shared(B[0;1m[33m<IntExpr>[39m(B[m(val, Private::(B[0;1m[31mTAG[39m(B[m);[32d  }[K[33d[K[34d  std::string dcCode() [32mconst[39m(B[m;[35d[42m  [49m(B[m[K[36dstd::string toString() [32mconst[39m(B[m;[K[3d[?12l[?25h[?25l[1;4H(B[0;7m1[1;86Hcc[168G(B[m[37;72H (B[0;7m[ sample.cc -- 85[37;98H(B[m[4;15r[15;1H[39;49m(B[m[4S[1;39r[3;3H(B[0;1m[36mnclude[39m(B[m (B[0;1m[33m"expr.hh"[4d[39m(B[m[K[6d(B[0;1m[36m#include[39m(B[m (B[0;1m[33m<sstream>[8d[39m(B[mstd::string[K[9dIntExpr::toString() [32mconst[10d[39m(B[m{[K[11d std::stringstream s;[K[12;3Hs << value;[13;3H[35mreturn[39m(B[m s.str();[14d}[16d[32mstatic[39m(B[m std::string[17dbinaryExprToString(std::string op, ExprPtr left, ExprPtr right)[18d{[K[19d  std::stringstream s;[K[20d  s << (B[0;1m[33m"("[39m(B[m << *left << (B[0;1m[33m") "[39m(B[m << op << (B[0;1m[33m" ("[39m(B[m << *right << (B[0;1m[33m")"[39m(B[m;[21;3H[35mreturn[39m(B[m s.str();[22d}[K[23d[K[24dstd::string[25dIntExpr::dcCode() [32mconst[39m(B[m[K[26d{[K[27;8H[1K std::stringstream s;[28;9Hs << value;[29;8H[1K [35mreturn[39m(B[m s.str();[K[30d}[K[31d[K[32dstd::string[33dAddExpr::dcCode() [32mconst[34d[39m(B[m{[K[35;8H[1K std::stringstream s;[36;8H[1K s << (*left).dcCode() << (B[0;1m[33m" "[39m(B[m << (*right).dcCode() << (B[0;1m[33m" +"[39m(B[m;[3d[?12l[?25h[?25l[1;4H(B[0;7m2[1;86Hhh[168G(B[m[37;72H(B[0;7m[ sample.hh -- 157[37;98H(B[m[3;3H(B[0;1m[36mfndef[39m(B[m (B[0;1m[31mEXPR_HH_[39m(B[m[K[4d(B[0;1m[36m#define[39m(B[m (B[0;1m[31mEXPR_HH_[5d[39m(B[m[K[6;10H(B[0;1m[33m"tostring.hh"[8d[36m#include[39m(B[m (B[0;1m[33m<memory>[9d[36m#include[39m(B[m (B[0;1m[33m<string>[39m(B[m[K[10d[K[11d[K[12d[32mclass[39m(B[m Expr : [32mpublic[39m(B[m ToString {[13d[32mpublic(B[0;1m[35m:[39m(B[m[K[14d  [32mvirtual[39m(B[m [32mint[39m(B[m eval() [32mconst[39m(B[m = 0;[15;3H[32mvirtual[39m(B[m std::string dcCode() [32mconst[39m(B[m = 0;[16d};[K[17d[K[18d(B[0;1m[34m//ExprPtr is an alias for a smart shared ptr to an Expr.[19d//using is like a typedef[20d(B[0m[32musing[39m(B[m ExprPtr = std::shared_ptr(B[0;1m[33m<Expr>[39m(B[m;[K[21d[K[22d(B[0;1m[34m/** An IntExpr only contains an integer value */[23d(B[0m[32mclass[39m(B[m IntExpr : [32mpublic[39m(B[m Expr {[24d[32mprivate(B[0;1m[35m:[39m(B[m[K[25d  [32menum[39m(B[m [32mclass[39m(B[m Private { (B[0;1m[31mTAG[39m(B[m };[26d[32mpublic(B[0;1m[35m:[27;3H(B[0m[32mconst[39m(B[m [32mint[39m(B[m value;[K[28d[K[29d  (B[0;1m[34m/** Factory function */[30d[39m(B[m  [32mstatic[39m(B[m ExprPtr make([32mint[39m(B[m val) {[31;5H[35mreturn[39m(B[m std::make_shared(B[0;1m[33m<IntExpr>[39m(B[m(val, Private::(B[0;1m[31mTAG[39m(B[m);[32d  }[K[33d[K[34d  std::string dcCode() [32mconst[39m(B[m;[35d[42m  [49m(B[m[K[36dstd::string toString() [32mconst[39m(B[m;[K[3d[?12l[?25h[?25l[1;4H(B[0;7m1[1;86Hcc[168G(B[m[37;72H (B[0;7m[ sample.cc -- 85[37;98H(B[m[4;15r[15;1H[39;49m(B[m[4S[1;39r[3;3H(B[0;1m[36mnclude[39m(B[m (B[0;1m[33m"expr.hh"[4d[39m(B[m[K[6d(B[0;1m[36m#include[39m(B[m (B[0;1m[33m<sstream>[8d[39m(B[mstd::string[K[9dIntExpr::toString() [32mconst[10d[39m(B[m{[K[11d std::stringstream s;[K[12;3Hs << value;[13;3H[35mreturn[39m(B[m s.str();[14d}[16d[32mstatic[39m(B[m std::string[17dbinaryExprToString(std::string op, ExprPtr left, ExprPtr right)[18d{[K[19d  std::stringstream s;[K[20d  s << (B[0;1m[33m"("[39m(B[m << *left << (B[0;1m[33m") "[39m(B[m << op << (B[0;1m[33m" ("[39m(B[m << *right << (B[0;1m[33m")"[39m(B[m;[21;3H[35mreturn[39m(B[m s.str();[22d}[K[23d[K[24dstd::string[25dIntExpr::dcCode() [32mconst[39m(B[m[K[26d{[K[27;8H[1K std::stringstream s;[28;9Hs << value;[29;8H[1K [35mreturn[39m(B[m s.str();[K[30d}[K[31d[K[32dstd::string[33dAddExpr::dcCode() [32mconst[34d[39m(B[m{[K[35;8H[1K std::stringstream s;[36;8H[1K s << (*left).dcCode() << (B[0;1m[33m" "[39m(B[m << (*right).dcCode() << (B[0;1m[33m" +"[39m(B[m;[3d[?12l[?25h[?25l[1;4H(B[0;7m2[1;86Hhh[168G(B[m[37;72H(B[0;7m[ sample.hh -- 157[37;98H(B[m[3;3H(B[0;1m[36mfndef[39m(B[m (B[0;1m[31mEXPR_HH_[39m(B[m[K[4d(B[0;1m[36m#define[39m(B[m (B[0;1m[31mEXPR_HH_[5d[39m(B[m[K[6;10H(B[0;1m[33m"tostring.hh"[8d[36m#include[39m(B[m (B[0;1m[33m<memory>[9d[36m#include[39m(B[m (B[0;1m[33m<string>[39m(B[m[K[10d[K[11d[K[12d[32mclass[39m(B[m Expr : [32mpublic[39m(B[m ToString {[13d[32mpublic(B[0;1m[35m:[39m(B[m[K[14d  [32mvirtual[39m(B[m [32mint[39m(B[m eval() [32mconst[39m(B[m = 0;[15;3H[32mvirtual[39m(B[m std::string dcCode() [32mconst[39m(B[m = 0;[16d};[K[17d[K[18d(B[0;1m[34m//ExprPtr is an alias for a smart shared ptr to an Expr.[19d//using is like a typedef[20d(B[0m[32musing[39m(B[m ExprPtr = std::shared_ptr(B[0;1m[33m<Expr>[39m(B[m;[K[21d[K[22d(B[0;1m[34m/** An IntExpr only contains an integer value */[23d(B[0m[32mclass[39m(B[m IntExpr : [32mpublic[39m(B[m Expr {[24d[32mprivate(B[0;1m[35m:[39m(B[m[K[25d  [32menum[39m(B[m [32mclass[39m(B[m Private { (B[0;1m[31mTAG[39m(B[m };[26d[32mpublic(B[0;1m[35m:[27;3H(B[0m[32mconst[39m(B[m [32mint[39m(B[m value;[K[28d[K[29d  (B[0;1m[34m/** Factory function */[30d[39m(B[m  [32mstatic[39m(B[m ExprPtr make([32mint[39m(B[m val) {[31;5H[35mreturn[39m(B[m std::make_shared(B[0;1m[33m<IntExpr>[39m(B[m(val, Private::(B[0;1m[31mTAG[39m(B[m);[32d  }[K[33d[K[34d  std::string dcCode() [32mconst[39m(B[m;[35d[42m  [49m(B[m[K[36dstd::string toString() [32mconst[39m(B[m;[K[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[37d[K[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l7[3;37r8[37d[17S[1;39r[21;3H(B[0;1m[34m//use Private to ensure this constructor cannot be called from outside[22;3H//this class even though it is public[23;3H[39m(B[mIntExpr([32mint[39m(B[m val, Private x) : value(val) { }[25;3H[32mint[39m(B[m eval() [32mconst[39m(B[m { [35mreturn[39m(B[m value; }[27d}; (B[0;1m[34m//IntExpr[29d//KISS results in repetitive code for binary expressions.[30d//Not using alternatives like a template class[33d(B[0m[32mclass[39m(B[m AddExpr : [32mpublic[39m(B[m Expr {[34d[32mprivate(B[0;1m[35m:[35;3H(B[0m[32menum[39m(B[m [32mclass[39m(B[m Private { (B[0;1m[31mTAG[39m(B[m };[36d[32mpublic(B[0;1m[35m:[20d[39m(B[m[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[9;35r[9;1H[11T[1;39r[3;1H[K[4d  (B[0;1m[34m//use Private to ensure this constructor cannot be called from outside[5d[39m(B[m  (B[0;1m[34m//this class even though it is public[39m(B[m[K[6d  IntExpr([32mint[39m(B[m val, Private x) : value(val) { }[7d[K[8d  [32mint[39m(B[m eval() [32mconst[39m(B[m { [35mreturn[39m(B[m value; }[10d}; (B[0;1m[34m//IntExpr[12d//KISS results in repetitive code for binary expressions.[13d//Not using alternatives like a template class[16d(B[0m[32mclass[39m(B[m AddExpr : [32mpublic[39m(B[m Expr {[17d[32mprivate(B[0;1m[35m:[18;3H(B[0m[32menum[39m(B[m [32mclass[39m(B[m Private { (B[0;1m[31mTAG[39m(B[m };[19d[32mpublic(B[0;1m[35m:[20d[39m(B[m  [32mconst[39m(B[m ExprPtr left;[21;9HExprPtr right;[24dExprPtr left, ExprPtr right) {[25;29H(B[0;1m[33mAdd[38G[39m(B[mleft, right, Private::(B[0;1m[31mTAG[39m(B[m);[29d[K[34d  AddExpr(ExprPtr& left, ExprPtr& right, Private x) :[35;5Hleft(left), right(right) {[36d  }[K[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[3;35r[35;1H[17S[1;39r[17;37r[17;1H[10T[1;39r[17;3HAddExpr(ExprPtr& left, ExprPtr& right, Private x) :[18;5Hleft(left), right(right) {[19;3H}[21d[32mint[39m(B[m eval() [32mconst[39m(B[m { [35mreturn[39m(B[m left->eval() + right->eval(); }[22d[42m  [23d[49m(B[m}; (B[0;1m[34m//AddExpr[26d(B[0m[32mclass[39m(B[m SubExpr : [32mpublic[39m(B[m Expr {[27d[32mprivate(B[0;1m[35m:[39m(B[m[K[28;3H[32menum[39m(B[m [32mclass[39m(B[m Private { (B[0;1m[31mTAG[39m(B[m };[K[29d[32mpublic(B[0;1m[35m:[30;3H(B[0m[32mconst[39m(B[m ExprPtr left;[31;3H[32mconst[39m(B[m ExprPtr right;[33;3H(B[0;1m[34m/** Factory function */[34;3H(B[0m[32mstatic[39m(B[m ExprPtr make(ExprPtr left, ExprPtr right) {[35;5H[35mreturn[39m(B[m std::make_shared(B[0;1m[33m<SubExpr>[39m(B[m(left, right, Private::(B[0;1m[31mTAG[39m(B[m);[36;3H}[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[1;4H(B[0;7m1[1;86Hcc[168G(B[m[37;73H(B[0;7m[ sample.cc -- 85 lines ](B[m[1;6H(B[0;7m1[168G(B[m[39;4HExit [37d[3d(B[0;1m[36m#include[39m(B[m (B[0;1m[33m"expr.hh"[39m(B[m[K[4d[K[5d(B[0;1m[36m#include[39m(B[m (B[0;1m[33m<string>[6d[36m#include[39m(B[m (B[0;1m[33m<sstream>[39m(B[m[K[7d[K[8dstd::string[K[9dIntExpr::toString() [32mconst[10d[39m(B[m{[11;14Hstream s;[K[12;3Hs << value;[13;3H[35mreturn[39m(B[m s.str();[K[14d}[15d[K[16d[32mstatic[39m(B[m std::string[K[17dbinaryExprToString(std::string op, ExprPtr left, ExprPtr right)[18d{[K[19d std::stringstream s;[20;3Hs << (B[0;1m[33m"("[39m(B[m << *left << (B[0;1m[33m") "[39m(B[m << op << (B[0;1m[33m" ("[39m(B[m << *right << (B[0;1m[33m")"[39m(B[m;[21;3H[35mreturn[39m(B[m s.str();[K[22d}[K[23d[K[24dstd::string[25dIntExpr::dcCode() [32mconst[26d[39m(B[m{[K[27;8H[1K std::stringstream s;[28;8H[1K s << value;[K[29;8H[1K [35mreturn[39m(B[m s.str();[30d}[K[31d[K[32dstd::string[33dAddExpr::dcCode() [32mconst[39m(B[m[K[34d{[K[35;5H    std::stringstream s;[K[36;8H[1K s << (*left).dcCode() << (B[0;1m[33m" "[39m(B[m << (*right).dcCode() << (B[0;1m[33m" +"[39m(B[m;[3d[?12l[?25h[?25l[37d[J[39;169H[?12l[?25h[39;1H[?1049l[23;0;0t[?1l>]0;aservet1@remote05: ~/i240a/work/lab11/solution[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11/solution[01;31m (master)[00m$ na[K[Kcp sample.hh stack.hh
]0;aservet1@remote05: ~/i240a/work/lab11/solution[01;32maservet1@remote05[00m:[01;34m~/i240a/work/lab11/solution[01;31m (master)[00m$ exit

Script done on 2020-04-23 15:04:26-04:00 [COMMAND_EXIT_CODE="0"]
